<?xml version="1.0"  encoding="UTF-8" ?>
<!--
This Source Code Form is subject to the terms of the Mozilla Public
License, v. 2.0. If a copy of the MPL was not distributed with this
file, You can obtain one at http://mozilla.org/MPL/2.0/.
-->


<bindings xmlns="http://www.mozilla.org/xbl"
        xmlns:xbl="http://www.mozilla.org/xbl"
        xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

    <!-- Binding around a browser that is used to load a web page -->
    <binding id="slimer_navigator">
        <content flex="1">
            <xul:browser anonid="mBrowser" flex="1"
                         type="content-targetable" autoscroll="true" disablesecurity="false"/>
        </content>
        <implementation>
            <constructor>
                <![CDATA[
                this.initMessageManager();
                this.browser.messageManager.loadFrameScript('chrome://slimerjs/content/navigatorFrameScript.js', true);
            ]]>
            </constructor>
            <destructor>
                this.resetBrowser();
            </destructor>

            <field name="browser" readonly="true">
                document.getAnonymousElementByAttribute(this, "anonid", "mBrowser");
            </field>

            <field name="requestCounter">0</field>
            <method name="resetBrowser">
                <body>
                    this.browser.stop();
                    this.browser.removeProgressListener(this.mProgressListener);
                    //this.browser.sessionHistory.PurgeHistory(1000);
                    this.browser.destroy();
                </body>
            </method>

            <method name="initMessageManager">
                <body><![CDATA[
                var me = this;
                var mm = this.browser.messageManager;

                // listener for the first about:blank page load
                var firstPageLoaderListener = function(message){
                    let channel = me.browser.docShell.currentDocumentChannel
                    if (channel.URI.spec != 'about:blank') {
                        return;
                    }
                    // the initial about:blank is loaded, we can now
                    // initialize progress listeners and so one,
                    // and we can send the BrowserReady event.
                    mm.removeMessageListener("pageloaded", firstPageLoaderListener);
                    var evt = document.createEvent("Event");
                    evt.initEvent("BrowserReady", true, false);
                    me.dispatchEvent(evt);
                }

                mm.addMessageListener("pageloaded", firstPageLoaderListener);
                ]]></body>
            </method>
        </implementation>
        <handlers>
        </handlers>
    </binding>
</bindings>


